{"version":3,"file":"static/js/841.eeac26c0.chunk.js","mappings":"uPAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4K,SCoCvB,EAhCkB,WAChB,OAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAeF,EAAAA,EAAAA,UAAS,GAAjBG,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAUjB,OAJAC,EAAAA,EAAAA,YAAU,YAJV,SAAqBH,IACnBI,EAAAA,EAAAA,IAAeJ,GAAMK,KAAKN,EAC3B,CAGCO,CAAYN,EACb,GAAE,CAACA,IAGFF,IACE,iCACA,4CACF,wBACGA,EAAOS,KAAI,SAAAC,GACV,OACE,yBACE,SAACd,EAAD,CAAYe,GAAE,kBAAaD,EAAME,IAAKC,MAAO,CAAEC,OAAO,GAAD,OAAKX,EAASY,UAAd,OAAyBZ,EAASW,SAAvF,SAAoGJ,EAAMM,OAASN,EAAMO,QADlHP,EAAME,GAIlB,OAEH,SAAC,EAAAM,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,QAIP,C,+LCpCKC,EAAK,mCAIJ,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,wFACoBmB,EAAAA,EAAAA,GAAM,mBAAoB,CAAEC,OAAO,CAAEC,QAASH,EAAKlB,KAAAA,KADvE,cACGsB,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAMA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA4BC,EAAO1B,GAAnC,wFACoBmB,EAAAA,EAAAA,GAAM,gBAAiB,CAAEC,OAAQ,CAAEC,QAASH,EAAKlB,KAAAA,EAAM0B,MAAAA,KAD3E,cACGJ,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjB,GAA/B,wFACoBS,EAAAA,EAAAA,GAAM,UAAD,OAAWT,GAAM,CAAEU,OAAQ,CAAEC,QAASH,KAD/D,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlB,GAA9B,wFACoBS,EAAAA,EAAAA,GAAM,UAAD,OAAWT,EAAX,YAAyB,CAAEU,OAAQ,CAAEC,QAASH,KADvE,cACGI,EADH,yBAGIA,EAASC,KAAKM,MAHlB,kEAQA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA8BpB,EAAIV,GAAlC,wFACoBmB,EAAAA,EAAAA,GAAM,UAAD,OAAWT,EAAX,YAAyB,CAAEU,OAAQ,CAAEC,QAASH,EAAKlB,KAAAA,KAD5E,cACGsB,EADH,yBAGIA,EAASC,KAAKC,SAHlB,kEA5BPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["Pages/HomePages/HomePages.styled.js","Pages/HomePages/HomePages.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 1.14;\n  color: navy;\n  display: block;\n  letter-spacing: 0.02em;\n  position: relative;\n`;\n","import { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport {  Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { trendingMovies } from '../../services/MoviesApi';\nimport {  LinkStyled } from './HomePages.styled';\n\nconst HomePages = () => {\n  const [movies, setMovies] = useState(null);\n  const [page] = useState(1);\n  const location = useLocation();\n\n  function fetchMovies(page) {\n    trendingMovies(page).then(setMovies);\n  };\n\n  useEffect(() => {\n    fetchMovies(page);\n  }, [page]);\n\n  return (\n    movies && (\n      <>\n      <h1>Trending today</h1>\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>  \n            <LinkStyled to={`/movies/${movie.id}`}state={{ search: `${location.pathname}${location.search}` }}>{movie.title || movie.name}</LinkStyled>\n          </li>\n        );\n      })}\n    </ul>\n    <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>)\n  );\n}\nexport default HomePages;\n\nHomePages.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\n\n\n","import axios from \"axios\"\n\nconst KEY ='e27e533a17eaf10a649cd2113997b376' ;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/' \n\nexport async function trendingMovies (page){\n    const response = await axios('trending/all/day', { params:{ api_key: KEY, page }})\n    return response.data.results\n\n};\n\nexport async function searchMovies(query, page) {\n    const response = await axios('/search/movie', { params: { api_key: KEY, page, query } })\n    return response.data.results\n\n};\n\nexport async function detailesMovies (id){\n    const response = await axios(`/movie/${id}`, { params: { api_key: KEY,  } })\n    return response.data\n\n};\n\nexport async function creditsMovies (id){\n    const response = await axios(`/movie/${id}/credits`, { params: { api_key: KEY,  } })\n\n    return response.data.cast\n\n};\n\n\nexport async function reviewsMovies (id, page){\n    const response = await axios(`/movie/${id}/reviews`, { params: { api_key: KEY, page } })\n\n    return response.data.results\n\n};\n"],"names":["LinkStyled","styled","Link","useState","movies","setMovies","page","location","useLocation","useEffect","trendingMovies","then","fetchMovies","map","movie","to","id","state","search","pathname","title","name","Suspense","fallback","KEY","axios","params","api_key","response","data","results","searchMovies","query","detailesMovies","creditsMovies","cast","reviewsMovies"],"sourceRoot":""}